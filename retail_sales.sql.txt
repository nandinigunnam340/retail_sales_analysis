-- delete null values
delete FROM retail_sales
WHERE 
    sale_date IS NULL OR sale_time IS NULL OR customer_id IS NULL OR 
    gender IS NULL OR age IS NULL OR category IS NULL OR 
    quantity IS NULL OR price_per_unit IS NULL OR cogs IS NULL;  



-- identify duplicates
select *
from retail_sales
group by sale_date,sale_time,customer_id,gender,age,category,quantity,price_per_unit,cogs,transactions_id
having count(*)>1; 


-- to check range outliers 
select *
from retail_sales
where age>100;  


--- unique customers
select distinct customer_id,gender
from retail_sales 
order by customer_id asc;  


-- which gender has highest count of transactions
select count(transactions_id),gender
from retail_sales
group by gender
order by count(transactions_id) desc
limit 1;  


-- which gender has spend most of the money
select gender,sum(total_sale)
from retail_sales
group by gender 
order by sum(total_sale) desc
limit 1; 



-- spending behaviour for different gender on different categories in increasing order of spending 
select gender,category,sum(total_sale)
from retail_sales
group by gender,category
order by sum(total_sale) desc
limit 2; 



--Write a SQL query to retrieve all columns for sales made on 2022-11-05:
select *
from retail_sales
where sale_date = '2022-11-05' 
---Write a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 4 in the month of Nov-2022:
select transactions_id
from retail_sales
where category='clothing' and quantity>4 and sale_date like '2022-11%';  



---Write a SQL query to calculate the total sales (total_sale) for each category.:
select category,sum(total_sale)
from retail_sales
group by category;  


 
---Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.:
select avg(age)
from retail_sales
where category='beauty';  


 
---Write a SQL query to find all transactions where the total_sale is greater than 1000.:
select transactions_id,total_sale
from retail_sales
where total_sale>1000;  



---Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.:
select gender,category,count(transactions_id)
from retail_sales
group by  gender,category
order by gender; 

 
---Write a SQL query to calculate the average sale for each month. Find out best selling month in each year
select max(total_sale)over(partition by year),month,year 
from ( select avg(total_sale) as total_sale,month(sale_date) as month,year(sale_date) as year
from retail_sales
 group by month(sale_date),year(sale_date))result;

 
 ---Write a SQL query to find the top 5 customers based on the highest total sales:
select customer_id,sum(total_sale)
from retail_sales
group by customer_id
order by sum(total_sale) desc
limit 5;  

 
--Write a SQL query to find the number of unique customers who purchased items from each category.:
select   count( distinct customer_id),category
from retail_sales
group by category;  


 --Write a SQL query to create each shift and number of orders (Example Morning <12, Afternoon Between 12 & 17, Evening >17):
 select count(transactions_id),shift
 from(select transactions_id ,case 
 when extract(hour from sale_time)<12 then 'morning' 
 when extract(hour from sale_time) between 12 and 17 then 'afternoon'
 when extract(hour from sale_time)>17 then 'evening'
 end as shift
  from  retail_sales)reult
  group by shift;
 
 
 


